class PixobeAffiliateAdmin{constructor(container){this.container=container;if(this.container){this.init()}}init(){const form=this.container.querySelector("#pixobe-affiliate-form");if(!form){throw new Error("No form configured")}form.addEventListener("input",this.formInputListener);this.form=form;let viewContainer=this.container.querySelector("#pixobe-affiliate-view");if(!viewContainer){viewContainer=this.container.querySelector("#papreview")}this.viewContainer=viewContainer;this.attachListeners()}adjustWidth=()=>{const paadmin=this.container;if(paadmin){const pacommon=paadmin.querySelector("#pacommon");const paconfig=paadmin.querySelector("#paconfig");const papreviewWidth=paadmin.clientWidth-(pacommon.clientWidth+paconfig.clientWidth+20);const preview=paadmin.querySelector("#papreview");preview.style.width=`${papreviewWidth}px`}};formInputListener=event=>{const target=event.target;const blurred=target.closest(".blurred");if(blurred){return}const{dataViewItem}=this.getFormElements(target);this.updateChanges(event,dataViewItem)};updateChanges(event,dataViewItem){const value=event.target.value;const{target,targetAttr,targetProp,targetMultiple}=event.target.dataset;if(targetMultiple){const multipleTargets=JSON.parse(targetMultiple);multipleTargets.forEach(targetElement=>this.applyChanges(dataViewItem,targetElement,targetAttr,targetProp,value))}else{this.applyChanges(dataViewItem,target,targetAttr,targetProp,value)}}applyChanges=(dataViewItem,target,targetAttr,targetProp,value)=>{const targetElement=dataViewItem.querySelector(`[data-target-id="${target}"]`);if(targetAttr){if(targetAttr==="style"){targetElement.style[targetProp]=value}else{targetElement.setAttribute(targetAttr,value)}}else{targetElement.innerHTML=value}};onStyleChange=()=>{const form=this.form;if(form){document.getElementById("pixobe-formaction").value="style-change";form.submit()}};getFormElements=target=>{const dataList=target.closest("[data-list]");if(!dataList){return{dataViewItem:this.viewContainer}}const dataListItem=target.closest('[role="listitem"]');const index=Array.prototype.indexOf.call(dataList.children,dataListItem);if(!dataListItem){throw new Error("Please add list item <li> under <ul> with data-list forms.")}const dataListName=dataList.dataset.list;const order=dataList.dataset.order;let dataViewElement=null;if(order){dataViewElement=this.viewContainer.querySelectorAll(`[data-list="features"]`)[order]}else{dataViewElement=this.viewContainer.querySelector(`[data-list="${dataListName}"]`)}if(!dataViewElement){throw new Error("Please add list item <li> under <ul> with data-list under view.")}const dataViewItem=dataViewElement.children[index];return{dataListName:dataListName,dataListItem:dataListItem,dataViewItem:dataViewItem,order:order}};add=event=>{const{dataListName,dataListItem,dataViewItem,order}=this.getFormElements(event.target);this.insertAdjacentElements(dataListName,dataListItem,dataViewItem,order)};delete=event=>{event.preventDefault();const{dataListItem,dataViewItem}=this.getFormElements(event.target);dataListItem.remove();dataViewItem.remove()};findAndRemove=query=>{const targetElement=this.container.querySelector(query);if(!targetElement){throw new Error(`Unable to find element  ${query}  to delete.`)}targetElement.remove()};insertAdjacentElements=(name,formElement,viewElement,order)=>{const newFormNode=this.createTemplate(`[data-form-template=${name}]`,order);const newViewNode=this.createTemplate(`[data-view-template=${name}]`,order);formElement.parentNode.insertBefore(newFormNode,formElement.nextSibling);viewElement.parentNode.insertBefore(newViewNode,viewElement.nextSibling)};createTemplate=(selector,order)=>{const template=this.container.querySelector(selector);if(!template){throw new Error("Unable to find template with selector :: "+selector)}const node=template.content.cloneNode(true);const elements=node.querySelectorAll("[data-order]");if(elements){elements.forEach(element=>{element.setAttribute("data-order",order)})}const arrayInputs=node.querySelectorAll("[data-twodimen]");if(arrayInputs){arrayInputs.forEach(element=>{const name=element.dataset.twodimen;element.setAttribute("name",`${name}[${order}][]`)})}this.registerListeners(node);return node};refreshDataOrder=listId=>{const listElement=this.container.querySelectorAll(`#{listId}`);listElement.forEach((item,idx)=>{item.setAttribute("data-order",idx);const children=item.children})};registerListeners=documentFragment=>{const addButton=documentFragment.querySelector("[data-action=add]");if(addButton)addButton.addEventListener("click",this.add);const removeButton=documentFragment.querySelector("[data-action=delete]");if(removeButton)removeButton.addEventListener("click",this.delete)};attachListeners=()=>{const addActionButtons=this.container.querySelectorAll("[data-action=add]");if(addActionButtons){addActionButtons.forEach(button=>{button.removeEventListener("click",this.add,true);button.addEventListener("click",this.add,true)})}const deleteActionButtons=this.container.querySelectorAll("[data-action=delete]");if(deleteActionButtons){deleteActionButtons.forEach(button=>{button.removeEventListener("click",this.delete,true);button.addEventListener("click",this.delete,true)})}}}var PAAdmin={};document.addEventListener("DOMContentLoaded",function(){PAAdmin=new PixobeAffiliateAdmin(document.getElementById("paadmin"))});function onPixobeListFilter(){const wpListTableForm=document.getElementById("affiliate-links-table");if(wpListTableForm){const entries=Object.fromEntries(new FormData(wpListTableForm).entries());const filterBy=entries["filterby"];const url=new URL(window.location.href);var search_params=url.searchParams;if(filterBy!=="")search_params.set("filterby",filterBy);else search_params.delete("filterby");url.search=search_params.toString();wpListTableForm.action=url.toString()}}